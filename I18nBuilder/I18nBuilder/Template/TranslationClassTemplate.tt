<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using <#=ProjectNamespace#>.I18nBuilder.Interface;

namespace <#=ProjectNamespace#>.I18nBuilder
{
    public partial class <#=ClassName#>:II18nTranslation  
    {
        private IReadOnlyDictionary<string, Func<string>> _translations = new Dictionary<string, Func<string>>();

        public string this[string key] 
        {
            get
            {
                if (!_translations.ContainsKey(key))
                {
                    return key;
                }
                return _translations[key]();
            }
        }

        public <#=ClassName#>()
        {
            _translations = new Dictionary<string, Func<string>>()
            {
                <#
                PushIndent("                ");
                foreach(var member in Keys){
                    WriteLine($"{{ \"{member}\" , ()=>{member} }},");
                }
                ClearIndent();
                #>
            };
        }

        <#
        PushIndent("        ");
        foreach(var menber in Keys)
        {
            WriteLine($"public string {menber} {{ get; set; }} = \"{menber}\";");   
        }
        ClearIndent();
        #>
        
        public bool ContainsKey(string key)=>_translations.ContainsKey(key);
    }
}